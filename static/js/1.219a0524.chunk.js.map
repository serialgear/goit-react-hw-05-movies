{"version":3,"file":"static/js/1.219a0524.chunk.js","mappings":"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","sources":["components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  margin-left: 35px;\n  margin-bottom: 20px;\n  color: #3f51b5;\n  background-color: transparent;\n  font-size: 25px;\n  font-weight: 500;\n\n  padding: 10px;\n  border-radius: 10px;\n  border-color: transparent;\n  box-shadow: 0 0 8px 1px #f2c0a88f;\n  cursor: pointer;\n  &:hover {\n    color: #a16103;\n    box-shadow: 0 0 10px 2px #a16103;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  color: #3f51b5;\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import { Button, Link, Label } from './GoBackButton.styled';\nimport { ImArrowLeft } from 'react-icons/im';\nimport PropTypes from 'prop-types';\n\nconst GoBackButton = ({ to }) => {\n  return (\n    <Button>\n      <Link to={to}>\n        <ImArrowLeft />\n        <Label>Go back</Label>\n      </Link>\n    </Button>\n  );\n};\nexport default GoBackButton;\n\nGoBackButton.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  color: #a16103;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`;\n\nexport const SectionTitle = styled.h3`\n  color: #7b3f00;\n`;\n\nexport const AddTitle = styled.h2`\n  color: #a16103;\n`;\nexport const MovieBox = styled.div`\n  display: flex;\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0 0 10px #0a04573b;\n`;\n\nexport const AddBox = styled.section`\n  box-shadow: 0 0 10px #0a04573b;\n  padding: 10px;\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-bottom: 20px;\n`;\nexport const Data = styled.div`\n  display: block;\n  padding: 15px;\n  margin-left: 20px;\n  color: #090c4f;\n`;\n\nexport const AddLink = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  color: #3f51b5;\n  font-size: 25px;\n  font-weight: 500;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 8px 1px #f2c0a88f;\n  &.active {\n    color: #a16103;\n    box-shadow: 0 0 10px 2px #a16103;\n  }\n`;\n\nexport const AddList = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n","import PropTypes from 'prop-types';\nimport { animateScroll as scroll, scrollSpy } from 'react-scroll';\nimport {\n  Title,\n  MovieBox,\n  Data,\n  AddLink,\n  SectionTitle,\n  AddTitle,\n  AddList,\n  AddBox,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ data, state }) => {\n  const loadAddInfo = () => {\n    scrollSpy.update();\n    scroll.scrollTo('700');\n  };\n\n  const { title, year, image, vote, about, genres } = data;\n\n  return (\n    <>\n      {' '}\n      <Title>\n        {title}({year})\n      </Title>\n      <MovieBox>\n        <img src={image} alt={title} width=\"320px\" />\n        <Data>\n          <p>User Score: {vote}</p>\n          <section>\n            <SectionTitle>Overview</SectionTitle>\n            <p>{about}</p>\n          </section>\n          <section>\n            <SectionTitle>Genres</SectionTitle>\n            <p>{genres}</p>\n          </section>\n        </Data>\n      </MovieBox>\n      <AddBox>\n        <AddTitle>Additional information</AddTitle>\n        <AddList>\n          <li>\n            <AddLink to=\"cast\" onClick={loadAddInfo} state={{ from: state }}>\n              Cast\n            </AddLink>\n          </li>\n          <li>\n            <AddLink to=\"reviews\" onClick={loadAddInfo} state={{ from: state }}>\n              Reviews\n            </AddLink>\n          </li>\n        </AddList>\n      </AddBox>\n    </>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    year: PropTypes.number,\n    image: PropTypes.string,\n    vote: PropTypes.number,\n    about: PropTypes.string,\n    genres: PropTypes.string,\n  }),\n};\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovie } from 'services/moviesAPI';\nimport { useState, useEffect, Suspense } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Loader from '../../components/Loader/Loader';\nconst MovieDetails = () => {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovie(movieId)\n      .then(response => {\n        setData(response);\n      })\n      .catch(error => setError({ error }))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <main>\n      <GoBackButton to={backLinkHref}>Go Back</GoBackButton>\n      {error && toast.error(`Something went wrong! ${error.message}`)}\n      {isLoading && <Loader />}\n      <MovieCard data={data} state={backLinkHref} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      <ToastContainer autoClose={3000} />\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\nimport defaultImg from '../images/defaultImg.png';\nimport noFilm from '../images/noFilm.jpg';\nconst API_KEY = '9a3eb7a069130cbd83fc81cc8deda116';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p';\n\nconst getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return data;\n};\n\nconst getSearch = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n  });\n  const response = await axios.get(`${BASE_URL}/search/movie?${params}`);\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n\n  return data;\n};\n\nconst getImageUrl = path => {\n  return `${IMAGES_BASE_URL}/w500/${path}`;\n};\n\nconst getMovie = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${params}`);\n  const data = response.data;\n  return {\n    id: data.id,\n    title: data.title,\n    image: getImageUrl(data.poster_path),\n    year: new Date(data.release_date).getFullYear(),\n    genres: data.genres.map(genre => genre.name).join(', '),\n    vote: data.vote_average,\n    votes: data.vote_count,\n    popularity: data.popularity,\n    originalTitle: data.original_title,\n    about: data.overview,\n  };\n};\n\nconst getCastInfo = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const cast = [];\n\n  response.data.cast.map(item => {\n    const photo = item.profile_path\n      ? getImageUrl(item.profile_path)\n      : defaultImg;\n    return cast.push({\n      name: item.name,\n      character: item.character,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return cast;\n};\n\nconst getReviewsInfo = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\nexport { getTrending, getSearch, getMovie, getCastInfo, getReviewsInfo };\n"],"names":["Button","styled","Link","NavLink","Label","to","Title","SectionTitle","AddTitle","MovieBox","AddBox","Data","AddLink","AddList","data","state","loadAddInfo","scrollSpy","scroll","title","year","image","vote","about","genres","src","alt","width","onClick","from","useState","setData","isLoading","setIsLoading","error","setError","movieId","useParams","backLinkHref","useLocation","useEffect","getMovie","then","response","catch","finally","toast","message","Loader","Suspense","fallback","autoClose","API_KEY","BASE_URL","getTrending","axios","results","map","item","photo","poster_path","getImageUrl","noFilm","push","id","getSearch","query","params","URLSearchParams","api_key","path","Date","release_date","getFullYear","genre","name","join","vote_average","votes","vote_count","popularity","originalTitle","original_title","overview","getCastInfo","cast","profile_path","defaultImg","character","getReviewsInfo","res"],"sourceRoot":""}