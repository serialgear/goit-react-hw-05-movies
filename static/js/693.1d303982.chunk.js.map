{"version":3,"file":"static/js/693.1d303982.chunk.js","mappings":"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","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsBox = styled.div`\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0 0 10px #0a04573b;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 10px;\n  padding: 35px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-radius: 10px;\n  box-shadow: 0 0 5px grey;\n`;\n\nexport const Name = styled.h3`\n  color: #3f51b5;\n`;\n\nexport const Label = styled.p`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Span = styled.span`\n  font-weight: bold;\n  color: #a16103;\n`;\n\nexport const NotReviews = styled.i`\n  padding: 10px;\n  font-size: 30px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { getReviewsInfo } from '../../services/moviesAPI';\nimport { useParams } from 'react-router-dom';\nimport { ImSad } from 'react-icons/im';\nimport {\n  ReviewsBox,\n  List,\n  Item,\n  Name,\n  Label,\n  Span,\n  NotReviews,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsInfo(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewsBox>\n      {reviews?.length > 0 ? (\n        <List>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <Item key={id} className=\"item\">\n                <Name>\n                  Author: <Span>{author}</Span>\n                </Name>\n                <Label> {content}</Label>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <NotReviews>\n          <ImSad />\n          We don`t have any reviews for this movie.\n        </NotReviews>\n      )}\n    </ReviewsBox>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport defaultImg from '../images/defaultImg.png';\nimport noFilm from '../images/noFilm.jpg';\nconst API_KEY = '9a3eb7a069130cbd83fc81cc8deda116';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p';\n\nconst getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return data;\n};\n\nconst getSearch = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n  });\n  const response = await axios.get(`${BASE_URL}/search/movie?${params}`);\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n\n  return data;\n};\n\nconst getImageUrl = path => {\n  return `${IMAGES_BASE_URL}/w500/${path}`;\n};\n\nconst getMovie = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${params}`);\n  const data = response.data;\n  return {\n    id: data.id,\n    title: data.title,\n    image: getImageUrl(data.poster_path),\n    year: new Date(data.release_date).getFullYear(),\n    genres: data.genres.map(genre => genre.name).join(', '),\n    vote: data.vote_average,\n    votes: data.vote_count,\n    popularity: data.popularity,\n    originalTitle: data.original_title,\n    about: data.overview,\n  };\n};\n\nconst getCastInfo = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const cast = [];\n\n  response.data.cast.map(item => {\n    const photo = item.profile_path\n      ? getImageUrl(item.profile_path)\n      : defaultImg;\n    return cast.push({\n      name: item.name,\n      character: item.character,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return cast;\n};\n\nconst getReviewsInfo = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\nexport { getTrending, getSearch, getMovie, getCastInfo, getReviewsInfo };\n"],"names":["ReviewsBox","styled","List","Item","Name","Label","Span","NotReviews","useState","reviews","setReviews","movieId","useParams","useEffect","getReviewsInfo","then","length","map","id","author","content","className","API_KEY","BASE_URL","getTrending","axios","response","data","results","item","photo","poster_path","getImageUrl","noFilm","push","title","getSearch","query","params","URLSearchParams","api_key","path","getMovie","image","year","Date","release_date","getFullYear","genres","genre","name","join","vote","vote_average","votes","vote_count","popularity","originalTitle","original_title","about","overview","getCastInfo","cast","profile_path","defaultImg","character","res"],"sourceRoot":""}