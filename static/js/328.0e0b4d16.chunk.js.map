{"version":3,"file":"static/js/328.0e0b4d16.chunk.js","mappings":"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","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: 30px;\n  margin-right: 30px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nexport const Name = styled.h3`\n  color: #7b3f00;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.p`\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  color: #090c4f;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const ImgBox = styled.div`\n  width: 160px;\n  height: 230px;\n  margin-bottom: 10px;\n`;\n\nexport const Photo = styled.img`\n  display: block;\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastInfo } from '../../services/moviesAPI';\nimport { List, Item, Name, ImgBox, Photo, Label } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCastInfo(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.map(({ id, photo, name, character }) => {\n        // console.log(actor);\n\n        return (\n          <Item key={id}>\n            <ImgBox>\n              <Photo src={photo} alt={name} width=\"100%\" />\n            </ImgBox>\n\n            <Name>{name}</Name>\n            <Label>Character: {character}</Label>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nimport defaultImg from '../images/defaultImg.png';\nimport noFilm from '../images/noFilm.jpg';\nconst API_KEY = '9a3eb7a069130cbd83fc81cc8deda116';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p';\n\nconst getTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return data;\n};\n\nconst getSearch = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query: query,\n  });\n  const response = await axios.get(`${BASE_URL}/search/movie?${params}`);\n  const data = [];\n\n  response.data.results.map(item => {\n    const photo = item.poster_path ? getImageUrl(item.poster_path) : noFilm;\n    return data.push({\n      title: item.title,\n      id: item.id,\n      photo: photo,\n    });\n  });\n\n  return data;\n};\n\nconst getImageUrl = path => {\n  return `${IMAGES_BASE_URL}/w500/${path}`;\n};\n\nconst getMovie = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${params}`);\n  const data = response.data;\n  return {\n    id: data.id,\n    title: data.title,\n    image: getImageUrl(data.poster_path),\n    year: new Date(data.release_date).getFullYear(),\n    genres: data.genres.map(genre => genre.name).join(', '),\n    vote: data.vote_average,\n    votes: data.vote_count,\n    popularity: data.popularity,\n    originalTitle: data.original_title,\n    about: data.overview,\n  };\n};\n\nconst getCastInfo = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const cast = [];\n\n  response.data.cast.map(item => {\n    const photo = item.profile_path\n      ? getImageUrl(item.profile_path)\n      : defaultImg;\n    return cast.push({\n      name: item.name,\n      character: item.character,\n      id: item.id,\n      photo: photo,\n    });\n  });\n  return cast;\n};\n\nconst getReviewsInfo = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\nexport { getTrending, getSearch, getMovie, getCastInfo, getReviewsInfo };\n"],"names":["List","styled","Item","Name","Label","ImgBox","Photo","movieId","useParams","useState","cast","setCast","useEffect","getCastInfo","then","map","id","photo","name","character","src","alt","width","API_KEY","BASE_URL","getTrending","axios","response","data","results","item","poster_path","getImageUrl","noFilm","push","title","getSearch","query","params","URLSearchParams","api_key","path","getMovie","image","year","Date","release_date","getFullYear","genres","genre","join","vote","vote_average","votes","vote_count","popularity","originalTitle","original_title","about","overview","profile_path","defaultImg","getReviewsInfo","res"],"sourceRoot":""}